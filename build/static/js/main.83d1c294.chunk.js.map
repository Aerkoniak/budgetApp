{"version":3,"sources":["features/categories/Categories.module.css","features/shops/Shops.module.css","features/expense/Expense.module.css","features/history/History.module.css","features/expense/expenseSlice.js","features/expense/Expense.js","features/categories/categoriesSlice.js","features/categories/Categories.js","features/history/historySlice.js","features/shops/Shops.js","features/history/History.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","expenseSlice","createSlice","name","initialState","total","stage","rest","reducers","setExpense","state","action","payload","split","amount","nextStage","submitArray","undoStage","actions","selectExpense","expense","selectStage","selectSubmitedList","Expense","dispatch","useDispatch","useState","todaysExpense","setTodayExpense","className","styles","header","type","input","value","onChange","e","Number","target","Button","size","confirm","variant","onClick","categoriesSlice","list","shops","addCategory","push","addShop","selectCategoriesList","categories","selectShopsList","Categories","useSelector","inne","categoriesList","newCategory","setNewCategory","catValue","setCatValue","catArray","setCatArray","isAddCat","hideAddCat","warnings","setWarnings","cards","map","category","index","Card","dark","Accordion","Toggle","as","Header","eventKey","Collapse","Body","id","preventDefault","array","console","log","splitExpense","cat","listElement","pos","submitStage","block","InputGroup","addCat","addCatHide","FormControl","aria-describedby","placeholder","Append","isNew","ForEach","toLowerCase","historySlice","operations","shop","submitedList","addOperation","length","operation","history","historyList","Shops","shopList","shopValue","setShopValue","shopName","setShopName","isAddShop","hideAddShop","summary","element","ToggleButton","summaryList","ToggleButtonGroup","shopsList","val","addShopBtn","addShopHide","History","details","detail","accordionToggle","reverse","App","expenseStage","isHistoryVisible","showHistory","style","display","order","href","configureStore","reducer","expenseReducer","categoriesReducer","historyReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83d1c294.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"categories\":\"Categories_categories__12V70\",\"dark\":\"Categories_dark__1F7G1\",\"category\":\"Categories_category__3DGDn\",\"header\":\"Categories_header__3Ot9W\",\"listElement\":\"Categories_listElement__3--ZN\",\"confirm\":\"Categories_confirm__2r1rU\",\"addCat\":\"Categories_addCat__2Od7L\",\"addCatHide\":\"Categories_addCatHide__3tUWv Categories_addCat__2Od7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"shops\":\"Shops_shops__2a6V-\",\"summaryList\":\"Shops_summaryList__3XNBE\",\"shopsList\":\"Shops_shopsList__2-CoW\",\"addShopBtn\":\"Shops_addShopBtn__8IRAX\",\"addShop\":\"Shops_addShop__22Ult\",\"addShopHide\":\"Shops_addShopHide__xmYzY Shops_addShop__22Ult\",\"confirm\":\"Shops_confirm__3wKpo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"expense\":\"Expense_expense__1xptD\",\"header\":\"Expense_header__1v9vW\",\"input\":\"Expense_input__2QpMR\",\"confirm\":\"Expense_confirm__3dJJs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"History_history__OY3AM\",\"dark\":\"History_dark__1Mylx\",\"accordionToggle\":\"History_accordionToggle__1oTJW History_dark__1Mylx\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const expenseSlice = createSlice({\r\n    name: \"expense\",\r\n    initialState: {\r\n        total: 0,\r\n        stage: false,\r\n        rest: 0,\r\n    },\r\n    reducers: {\r\n        setExpense: (state, action) => {\r\n            state.total = action.payload;\r\n            state.stage = \"one\"\r\n        },\r\n        split: (state, action) => {\r\n            state.rest = (!state.rest ? state.total : state.rest) - action.payload.amount;\r\n        },\r\n        nextStage: (state, action) => {\r\n            state.stage = \"two\";\r\n            state.submitArray = action.payload\r\n        },\r\n        undoStage: (state, action) => {\r\n            if (!action.payload) {\r\n                state.stage = action.payload;\r\n                state.rest = 0\r\n            }\r\n            else if (action.payload === \"one\") {\r\n                state.stage = action.payload;\r\n                state.rest = 0\r\n            }\r\n\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setExpense, split, nextStage, undoStage } = expenseSlice.actions;\r\n\r\nexport const selectExpense = state => state.expense.total;\r\nexport const selectStage = state => state.expense.stage;\r\nexport const selectSubmitedList = state => state.expense.submitArray\r\n\r\nexport default expenseSlice.reducer;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setExpense, selectExpense } from './expenseSlice';\r\nimport styles from './Expense.module.css'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nexport function Expense() {\r\n\r\n    // const expense = useSelector(selectExpense);\r\n    const dispatch = useDispatch()\r\n    const [todaysExpense, setTodayExpense] = useState(false);\r\n\r\n    return (\r\n        <div className={styles.expense}>\r\n            <h4 className={styles.header}>Cześć! Ile dzisiaj wydałeś?</h4>\r\n\r\n            <form >\r\n                <input type=\"number\" className={styles.input} value={todaysExpense} onChange={(e) => setTodayExpense(Number(e.target.value))} />\r\n\r\n                <Button size=\"lg\" className={styles.confirm} variant=\"outline-light\" type=\"submit\" onClick={() => {\r\n                    dispatch(setExpense(todaysExpense));\r\n                    setTodayExpense(false)\r\n                }} >Dalej</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const categoriesSlice = createSlice({\r\n    name: \"categories\",\r\n    initialState: {\r\n        list: [{ name: \"Jedzenie\" }, { name: \"Używki\" }, { name: \"Domowe\" }, { name: \"Paliwo\" }, { name: \"Rachunki\" }],\r\n        shops: [{ name: \"Biedronka\" }, { name: \"Żabka\" }, { name: \"Lewiatan\" }, { name: \"Internet\" }]\r\n    },\r\n    reducers: {\r\n        addCategory: (state, action) => {\r\n            const list = state.list;\r\n            list.push({ name: `${action.payload}` })\r\n            state.list = list;\r\n        },\r\n        addShop: (state, action) => {\r\n            const shops = state.shops;\r\n            shops.push({ name: `${action.payload}` })\r\n            state.shops = shops;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addCategory, addShop } = categoriesSlice.actions;\r\n\r\nexport const selectCategoriesList = state => state.categories.list;\r\nexport const selectShopsList = state => state.categories.shops;\r\n\r\nexport default categoriesSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { selectExpense, split, nextStage, undoStage } from '../expense/expenseSlice';\r\nimport { selectCategoriesList, addCategory } from '../categories/categoriesSlice';\r\n\r\nimport styles from './Categories.module.css'\r\nimport { Accordion, Card, InputGroup, FormControl, Button } from 'react-bootstrap'\r\n\r\nfunction Categories() {\r\n\r\n    const dispatch = useDispatch();\r\n    const total = useSelector(selectExpense);\r\n    const inne = useSelector(state => state.expense.rest)\r\n\r\n    const categoriesList = useSelector(selectCategoriesList);\r\n    const [newCategory, setNewCategory] = useState(\"\");\r\n    const [catValue, setCatValue] = useState(\"\");\r\n    const [catArray, setCatArray] = useState([]);\r\n    const [isAddCat, hideAddCat] = useState(false);\r\n    const [warnings, setWarnings] = useState(\"\")\r\n\r\n    const splitExpense = (id) => {\r\n        const array = catArray;\r\n        const payload = {\r\n            name: id,\r\n            amount: Number(catValue)\r\n        }\r\n        console.log(payload);\r\n        setCatValue(false);\r\n        dispatch(split(payload));\r\n        array.push(payload);\r\n        setCatArray(array)\r\n    }\r\n\r\n    const addCatSupporter = () => {\r\n        let isNew = true;\r\n        categoriesList.ForEach((cat, index) => {\r\n            if (cat.name.toLowerCase() === newCategory.toLowerCase()) isNew = false;\r\n        })\r\n        if (isNew) {\r\n            dispatch(addCategory(newCategory));\r\n            setWarnings(\"\")\r\n        }\r\n        else setWarnings(\"Kategoria znajduje się już na liście\")\r\n\r\n        setNewCategory(\"\");\r\n        hideAddCat(false);\r\n    }\r\n\r\n    const submitStage = () => {\r\n        let submitArray = [];\r\n        let rest = {\r\n            name: \"Inne\",\r\n            amount: inne\r\n        }\r\n        if (inne) submitArray.push(rest);\r\n\r\n        catArray.map(pos => submitArray.push(pos))\r\n        // console.log(submitArray)\r\n        dispatch(nextStage(submitArray))\r\n    }\r\n\r\n    const cards = categoriesList.map((category, index) => ((\r\n        <Card key={index} className={styles.dark}>\r\n            <Accordion.Toggle as={Card.Header} eventKey={`${index}`}>\r\n                {category.name}\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={`${index}`}>\r\n                <Card.Body>\r\n                    <div className={styles.category}>\r\n                        <form>\r\n                            <input type=\"number\" value={catValue} onChange={e => setCatValue(e.target.value)} />\r\n                            <Button variant=\"outline-light\" type=\"submit\" id={`${category.name}`} onClick={(e) => {\r\n                                e.preventDefault();\r\n                                splitExpense(e.target.id)\r\n                            }}>Zapisz</Button>\r\n                        </form>\r\n                    </div>\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    )))\r\n\r\n    const rest = catArray.map(cat => {\r\n        return (\r\n            <p key={cat.amount + cat.name} className={styles.listElement}>{`Na ${cat.name} poszło ${cat.amount} PLN`}</p>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className={styles.categories}>\r\n            <p>Podziel kwotę między kategoriami</p>\r\n            <p className={styles.header}>Wydałeś dziś {total} PLN</p>\r\n            {inne ? <p className={styles.listElement}>Na Inne poszło {inne} PLN</p> : null}\r\n            {rest}\r\n\r\n            <Accordion >\r\n                {cards}\r\n            </Accordion>\r\n\r\n            <Button size=\"lg\" className={styles.confirm} variant=\"outline-light\" type=\"submit\" onClick={() => { submitStage() }} >Dalej</Button>\r\n            <Button size=\"sm\" className={styles.confirm} variant=\"outline-info\" onClick={() => {\r\n                dispatch(undoStage(false))\r\n            }}>Cofnij</Button>\r\n\r\n            <Button onClick={() => hideAddCat(!isAddCat)} block>Dodaj kategorię wydatków</Button>\r\n\r\n            <InputGroup className={isAddCat ? styles.addCat : styles.addCatHide}>\r\n                <FormControl\r\n                    aria-describedby=\"basic-addon2\"\r\n                    placeholder=\"Nazwa kategorii\"\r\n                    value={newCategory}\r\n                    onChange={(e) => setNewCategory(e.target.value)}\r\n                />\r\n                <InputGroup.Append>\r\n                    <Button variant=\"outline-light\" onClick={addCatSupporter}>Dodaj kategorię</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n            {warnings ? <p>{warnings}</p> : null}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Categories","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const historySlice = createSlice({\r\n    name: \"history\",\r\n    initialState: {\r\n        operations: [{\r\n            id: 1,\r\n            shop: \"Biedronka\",\r\n            submitedList: [\r\n                { name: \"Jedzenie\", amount: 10 },\r\n                { name: \"Rachunki\", amount: 45 }\r\n            ],\r\n            total: 55\r\n        },\r\n        {\r\n            id: 2,\r\n            shop: \"Żabka\",\r\n            submitedList: [\r\n                { name: \"Jedzenie\", amount: 10 },\r\n                { name: \"Paliwo\", amount: 50 }\r\n            ],\r\n            total: 60\r\n        },\r\n        {\r\n            id: 3,\r\n            shop: \"Lewiatan\",\r\n            submitedList: [\r\n                { name: \"Używki\", amount: 15 },\r\n                { name: \"Jedzenie\", amount: 15 }\r\n            ],\r\n            total: 30\r\n        },\r\n        {\r\n            id: 4,\r\n            shop: \"Żabka\",\r\n            submitedList: [\r\n                { name: \"Używki\", amount: 8 },\r\n                { name: \"Domowe\", amount: 12 }\r\n            ],\r\n            total: 20\r\n        }]\r\n    },\r\n    reducers: {\r\n        addOperation: (state, action) => {\r\n            let id = state.operations.length + 1;\r\n            let operation = action.payload;\r\n            operation.id = id;\r\n            const history = state.operations;\r\n            history.push(operation)\r\n            state.operations = history\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addOperation } = historySlice.actions;\r\n\r\nexport const historyList = state => state.history.operations;\r\n\r\n\r\nexport default historySlice.reducer;\r\n\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport styles from './Shops.module.css'\r\nimport { selectSubmitedList, selectExpense, undoStage } from '../expense/expenseSlice';\r\nimport { ToggleButtonGroup, ToggleButton, Button, InputGroup, FormControl } from 'react-bootstrap'\r\nimport { selectShopsList, addShop } from '../categories/categoriesSlice';\r\nimport { addOperation } from '../history/historySlice';\r\n// import ShopsButtons from './ShopsButtons';\r\n\r\nexport function Shops() {\r\n\r\n    const dispatch = useDispatch();\r\n    const submitedList = useSelector(selectSubmitedList);\r\n    const total = useSelector(selectExpense);\r\n\r\n    const shopList = useSelector(selectShopsList);\r\n    const [shopValue, setShopValue] = useState(\"\");\r\n    const [shopName, setShopName] = useState(\"\");\r\n    const [isAddShop, hideAddShop] = useState(false);\r\n    const [warnings, setWarnings] = useState(\"\");\r\n\r\n\r\n\r\n    const addShopSupporter = () => {\r\n        let isNew = true;\r\n        shopList.map((cat, index) => {\r\n            if (cat.name.toLowerCase() === shopName.toLowerCase()) isNew = false;\r\n        })\r\n        if (isNew) {\r\n            dispatch(addShop(shopName));\r\n            setWarnings(\"\");\r\n        }\r\n        else setWarnings(\"Sklep znajduje się już na liście\")\r\n\r\n        setShopName(\"\");\r\n        hideAddShop(false);\r\n    }\r\n\r\n    const saveOperationSupporter = () => {\r\n        const operation = {\r\n            total,\r\n            submitedList,\r\n            shop: shopValue,\r\n        }\r\n        dispatch(addOperation(operation));\r\n        dispatch(undoStage(false));\r\n    }\r\n    const summary = submitedList.map((element, index) => {\r\n        let name = element.name.toLowerCase()\r\n        if (element.amount === 0) return\r\n        else {\r\n            return (\r\n                <li key={element.name + index}>\r\n                    <p>{`na ${name} wydano ${element.amount} peelenów`}</p>\r\n                </li>\r\n\r\n            )\r\n        }\r\n    })\r\n\r\n    const shops = shopList.map((shop, index) => ((\r\n        <ToggleButton variant=\"outline-light\" value={shop.name}>\r\n            {shop.name}\r\n        </ToggleButton>\r\n    )))\r\n\r\n    return (\r\n        <div className={styles.shops}>\r\n            <p>Podsumowanie:</p>\r\n            <p>{`Łącznie wydano dzisiaj ${total} PLN.`}</p>\r\n            <ul className={styles.summaryList}>\r\n                {summary}\r\n            </ul>\r\n            <p>Wybierz sklep, w którym robiłeś właśnie zakupy:</p>\r\n            <ToggleButtonGroup className={styles.shopsList} type=\"radio\" name=\"options\" value={shopValue} onChange={val => setShopValue(val)} >\r\n                {shops}\r\n            </ToggleButtonGroup>\r\n\r\n            <Button size=\"lg\" className={styles.confirm} variant=\"outline-light\" type=\"submit\" onClick={saveOperationSupporter} >Zapisz operację</Button>\r\n            <Button size=\"sm\" className={styles.confirm} variant=\"outline-info\" onClick={() => {\r\n                dispatch(undoStage(\"one\"))\r\n            }}>Cofnij</Button>\r\n\r\n            <Button className={styles.addShopBtn} block onClick={() => hideAddShop(!isAddShop)}>Dodaj sklep do listy</Button>\r\n\r\n            <InputGroup className={isAddShop ? styles.addShop : styles.addShopHide}>\r\n                <FormControl\r\n                    aria-describedby=\"basic-addon2\"\r\n                    placeholder=\"Nazwa sklepu\"\r\n                    value={shopName}\r\n                    onChange={(e) => setShopName(e.target.value)}\r\n                />\r\n                <InputGroup.Append>\r\n                    <Button variant=\"outline-light\" onClick={addShopSupporter}>Dodaj kategorię</Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n            {warnings ? <p>{warnings}</p> : null}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from './History.module.css';\r\nimport { Accordion, Card } from 'react-bootstrap'\r\n\r\nimport { historyList } from '../history/historySlice';\r\n\r\nconst History = () => {\r\n\r\n    const operationsList = useSelector(historyList);\r\n\r\n    const operations = operationsList.map((operation, index) => {\r\n\r\n        const details = operation.submitedList.map((detail, index) => ((\r\n            <p>{`${detail.name} na kwotę ${detail.amount} PLN`}</p>\r\n        )))\r\n\r\n        return (\r\n            <Accordion>\r\n                <Card className={styles.dark}>\r\n                    <Card.Header >\r\n                        <p>Sklep: {operation.shop}</p>\r\n                        <p>Na kwotę: {operation.total} PLN</p>\r\n                    </Card.Header>\r\n                    <Accordion.Toggle className={styles.accordionToggle} eventKey={`${index}`} >\r\n                        <p>Wydatki szczegółowe:</p>\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey={`${index}`} >\r\n                        <Card.Body>{details}</Card.Body>\r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n        )\r\n    }).reverse()\r\n\r\n    return (\r\n        <div className={styles.history}>\r\n            <h2>Historia</h2>\r\n            <ul>\r\n                {operations}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default History;","import React from 'react';\r\n// import logo from './logo.svg';\r\n// import { Counter } from './features/counter/Counter';\r\nimport { selectStage } from './features/expense/expenseSlice'\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { Expense } from './features/expense/Expense';\r\nimport Categories from './features/categories/Categories';\r\nimport { Shops } from './features/shops/Shops';\r\nimport History from './features/history/History';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction App() {\r\n\r\n  const expenseStage = useSelector(selectStage);\r\n  const [isHistoryVisible, showHistory] = useState(false)\r\n  // style={isHistoryVisible ? { display: \"block\" } : null}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n      <div className=\"history\" id=\"history\" style={isHistoryVisible ? { display: \"block\", order: 2 } : null} >\r\n        <History />\r\n      </div>\r\n\r\n      <div className=\"today\">\r\n        {!expenseStage ?\r\n          <Expense />\r\n          : null}\r\n        {expenseStage === \"one\" ?\r\n          <Categories />\r\n          : null}\r\n        {expenseStage === \"two\" ?\r\n          <Shops />\r\n          : null}\r\n\r\n        <span className=\"mobileLink\" onClick={() => showHistory(!isHistoryVisible)}><a href=\"#history\">{isHistoryVisible ? \"kliknij tutaj by zamknąć historię\" : \"kliknij tutaj by otworzyć historię\"}</a> </span>\r\n      </div>\r\n\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n// import counterReducer from '../features/counter/counterSlice';\r\nimport expenseReducer from '../features/expense/expenseSlice';\r\nimport categoriesReducer from '../features/categories/categoriesSlice';\r\nimport historyReducer from '../features/history/historySlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    expense: expenseReducer,\r\n    categories: categoriesReducer,\r\n    history: historyReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}